{
	"id": "cfacb4c3c56fc4b379c6913f74caf832",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ISchemaResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport { Attestation } from \"./Common.sol\";\r\n\r\n/// @title ISchemaResolver\r\n/// @notice The interface of an optional schema resolver.\r\ninterface ISchemaResolver {\r\n    /// @notice Returns whether the resolver supports ETH transfers.\r\n    function isPayable() external pure returns (bool);\r\n\r\n    /// @notice Processes an attestation and verifies whether it's valid.\r\n    /// @param attestation The new attestation.\r\n    /// @return Whether the attestation is valid.\r\n    function attest(Attestation calldata attestation) external payable returns (bool);\r\n\r\n    /// @notice Processes multiple attestations and verifies whether they are valid.\r\n    /// @param attestations The new attestations.\r\n    /// @param values Explicit ETH amounts which were sent with each attestation.\r\n    /// @return Whether all the attestations are valid.\r\n    function multiAttest(\r\n        Attestation[] calldata attestations,\r\n        uint256[] calldata values\r\n    ) external payable returns (bool);\r\n\r\n    /// @notice Processes an attestation revocation and verifies if it can be revoked.\r\n    /// @param attestation The existing attestation to be revoked.\r\n    /// @return Whether the attestation can be revoked.\r\n    function revoke(Attestation calldata attestation) external payable returns (bool);\r\n\r\n    /// @notice Processes revocation of multiple attestation and verifies they can be revoked.\r\n    /// @param attestations The existing attestations to be revoked.\r\n    /// @param values Explicit ETH amounts which were sent with each revocation.\r\n    /// @return Whether the attestations can be revoked.\r\n    function multiRevoke(\r\n        Attestation[] calldata attestations,\r\n        uint256[] calldata values\r\n    ) external payable returns (bool);\r\n}"
			},
			"contracts/Common.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// A representation of an empty/uninitialized UID.\r\nbytes32 constant EMPTY_UID = 0;\r\n\r\n// A zero expiration represents an non-expiring attestation.\r\nuint64 constant NO_EXPIRATION_TIME = 0;\r\n\r\nerror AccessDenied();\r\nerror InvalidEAS();\r\nerror InvalidLength();\r\nerror InvalidSignature();\r\nerror NotFound();\r\n\r\n/// @notice A struct representing EIP712 signature data.\r\nstruct EIP712Signature {\r\n    uint8 v; // The recovery ID.\r\n    bytes32 r; // The x-coordinate of the nonce R.\r\n    bytes32 s; // The signature data.\r\n}\r\n\r\n/// @notice A struct representing a single attestation.\r\nstruct Attestation {\r\n    bytes32 uid; // A unique identifier of the attestation.\r\n    bytes32 schema; // The unique identifier of the schema.\r\n    uint64 time; // The time when the attestation was created (Unix timestamp).\r\n    uint64 expirationTime; // The time when the attestation expires (Unix timestamp).\r\n    uint64 revocationTime; // The time when the attestation was revoked (Unix timestamp).\r\n    bytes32 refUID; // The UID of the related attestation.\r\n    address recipient; // The recipient of the attestation.\r\n    address attester; // The attester/sender of the attestation.\r\n    bool revocable; // Whether the attestation is revocable.\r\n    bytes data; // Custom attestation data.\r\n}\r\n\r\n/// @notice A helper function to work with unchecked iterators in loops.\r\nfunction uncheckedInc(uint256 i) pure returns (uint256 j) {\r\n    unchecked {\r\n        j = i + 1;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ISchemaResolver.sol": {
				"ISchemaResolver": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation",
									"name": "attestation",
									"type": "tuple"
								}
							],
							"name": "attest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPayable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation[]",
									"name": "attestations",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "multiAttest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation[]",
									"name": "attestations",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "multiRevoke",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "schema",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "time",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "revocationTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "refUID",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "attester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "revocable",
											"type": "bool"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct Attestation",
									"name": "attestation",
									"type": "tuple"
								}
							],
							"name": "revoke",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
								"params": {
									"attestation": "The new attestation."
								},
								"returns": {
									"_0": "Whether the attestation is valid."
								}
							},
							"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
								"params": {
									"attestations": "The new attestations.",
									"values": "Explicit ETH amounts which were sent with each attestation."
								},
								"returns": {
									"_0": "Whether all the attestations are valid."
								}
							},
							"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
								"params": {
									"attestations": "The existing attestations to be revoked.",
									"values": "Explicit ETH amounts which were sent with each revocation."
								},
								"returns": {
									"_0": "Whether the attestations can be revoked."
								}
							},
							"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
								"params": {
									"attestation": "The existing attestation to be revoked."
								},
								"returns": {
									"_0": "Whether the attestation can be revoked."
								}
							}
						},
						"title": "ISchemaResolver",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
							"isPayable()": "ce46e046",
							"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
							"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
							"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}}},\"title\":\"ISchemaResolver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Returns whether the resolver supports ETH transfers.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"}},\"notice\":\"The interface of an optional schema resolver.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ISchemaResolver.sol\":\"ISchemaResolver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Common.sol\":{\"keccak256\":\"0xd8e7adef9c8f0ae6d1cc70cc600b0a8af49b4bc28e2683626f7ae74c80d948e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34cfc9d51bff93f170c9f1e26454715c910999425343be3192e9dc6dafc1cd93\",\"dweb:/ipfs/QmW9GCkxCjmwbMLUrSimTmzrRxoGcSfUMTj2FkVFALD81Q\"]},\"contracts/ISchemaResolver.sol\":{\"keccak256\":\"0xe06e6960f2ea2939628c5e95fe5f0a36962cfae22576d4e94c7bccd01da118f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53cadea585518d5dbc102ed59d93295cdf514d894e5b845fe2314eac6e7499cf\",\"dweb:/ipfs/QmUg8A17vrnt2k6J8jSJkifWT5MAn4246HpFz2CmNa94mo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
								"notice": "Processes an attestation and verifies whether it's valid."
							},
							"isPayable()": {
								"notice": "Returns whether the resolver supports ETH transfers."
							},
							"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
								"notice": "Processes multiple attestations and verifies whether they are valid."
							},
							"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
								"notice": "Processes revocation of multiple attestation and verifies they can be revoked."
							},
							"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
								"notice": "Processes an attestation revocation and verifies if it can be revoked."
							}
						},
						"notice": "The interface of an optional schema resolver.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Common.sol": {
				"ast": {
					"absolutePath": "contracts/Common.sol",
					"exportedSymbols": {
						"AccessDenied": [
							9
						],
						"Attestation": [
							45
						],
						"EIP712Signature": [
							24
						],
						"EMPTY_UID": [
							4
						],
						"InvalidEAS": [
							11
						],
						"InvalidLength": [
							13
						],
						"InvalidSignature": [
							15
						],
						"NO_EXPIRATION_TIME": [
							7
						],
						"NotFound": [
							17
						],
						"uncheckedInc": [
							61
						]
					},
					"id": 62,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"constant": true,
							"id": 4,
							"mutability": "constant",
							"name": "EMPTY_UID",
							"nameLocation": "131:9:0",
							"nodeType": "VariableDeclaration",
							"scope": 62,
							"src": "114:30:0",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_bytes32",
								"typeString": "bytes32"
							},
							"typeName": {
								"id": 2,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "114:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							},
							"value": {
								"hexValue": "30",
								"id": 3,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "143:1:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 7,
							"mutability": "constant",
							"name": "NO_EXPIRATION_TIME",
							"nameLocation": "227:18:0",
							"nodeType": "VariableDeclaration",
							"scope": 62,
							"src": "211:38:0",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint64",
								"typeString": "uint64"
							},
							"typeName": {
								"id": 5,
								"name": "uint64",
								"nodeType": "ElementaryTypeName",
								"src": "211:6:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint64",
									"typeString": "uint64"
								}
							},
							"value": {
								"hexValue": "30",
								"id": 6,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "248:1:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0"
							},
							"visibility": "internal"
						},
						{
							"errorSelector": "4ca88867",
							"id": 9,
							"name": "AccessDenied",
							"nameLocation": "260:12:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 8,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "272:2:0"
							},
							"src": "254:21:0"
						},
						{
							"errorSelector": "83780ffe",
							"id": 11,
							"name": "InvalidEAS",
							"nameLocation": "283:10:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 10,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "293:2:0"
							},
							"src": "277:19:0"
						},
						{
							"errorSelector": "947d5a84",
							"id": 13,
							"name": "InvalidLength",
							"nameLocation": "304:13:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 12,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "317:2:0"
							},
							"src": "298:22:0"
						},
						{
							"errorSelector": "8baa579f",
							"id": 15,
							"name": "InvalidSignature",
							"nameLocation": "328:16:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 14,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "344:2:0"
							},
							"src": "322:25:0"
						},
						{
							"errorSelector": "c5723b51",
							"id": 17,
							"name": "NotFound",
							"nameLocation": "355:8:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 16,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "363:2:0"
							},
							"src": "349:17:0"
						},
						{
							"canonicalName": "EIP712Signature",
							"id": 24,
							"members": [
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "v",
									"nameLocation": "464:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 24,
									"src": "458:7:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 18,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "458:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "r",
									"nameLocation": "500:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 24,
									"src": "492:9:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 20,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "492:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "s",
									"nameLocation": "552:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 24,
									"src": "544:9:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 22,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "544:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "EIP712Signature",
							"nameLocation": "435:15:0",
							"nodeType": "StructDefinition",
							"scope": 62,
							"src": "428:152:0",
							"visibility": "public"
						},
						{
							"canonicalName": "Attestation",
							"id": 45,
							"members": [
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "uid",
									"nameLocation": "675:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 45,
									"src": "667:11:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "667:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "schema",
									"nameLocation": "736:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 45,
									"src": "728:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "728:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 30,
									"mutability": "mutable",
									"name": "time",
									"nameLocation": "796:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 45,
									"src": "789:11:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 29,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "789:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "expirationTime",
									"nameLocation": "877:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 45,
									"src": "870:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 31,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "870:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "revocationTime",
									"nameLocation": "964:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 45,
									"src": "957:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 33,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "957:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 36,
									"mutability": "mutable",
									"name": "refUID",
									"nameLocation": "1056:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 45,
									"src": "1048:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 35,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1048:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 38,
									"mutability": "mutable",
									"name": "recipient",
									"nameLocation": "1116:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 45,
									"src": "1108:17:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 37,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1108:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 40,
									"mutability": "mutable",
									"name": "attester",
									"nameLocation": "1177:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 45,
									"src": "1169:16:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 39,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1169:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 42,
									"mutability": "mutable",
									"name": "revocable",
									"nameLocation": "1240:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 45,
									"src": "1235:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 41,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1235:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 44,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "1303:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 45,
									"src": "1297:10:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 43,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1297:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Attestation",
							"nameLocation": "648:11:0",
							"nodeType": "StructDefinition",
							"scope": 62,
							"src": "641:698:0",
							"visibility": "public"
						},
						{
							"body": {
								"id": 60,
								"nodeType": "Block",
								"src": "1475:48:0",
								"statements": [
									{
										"id": 59,
										"nodeType": "UncheckedBlock",
										"src": "1482:38:0",
										"statements": [
											{
												"expression": {
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 53,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1503:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 54,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "1507:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1511:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1507:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1503:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1503:9:0"
											}
										]
									}
								]
							},
							"documentation": {
								"id": 46,
								"nodeType": "StructuredDocumentation",
								"src": "1343:74:0",
								"text": "@notice A helper function to work with unchecked iterators in loops."
							},
							"id": 61,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "uncheckedInc",
							"nameLocation": "1426:12:0",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 49,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 48,
										"mutability": "mutable",
										"name": "i",
										"nameLocation": "1447:1:0",
										"nodeType": "VariableDeclaration",
										"scope": 61,
										"src": "1439:9:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 47,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1439:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1438:11:0"
							},
							"returnParameters": {
								"id": 52,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 51,
										"mutability": "mutable",
										"name": "j",
										"nameLocation": "1472:1:0",
										"nodeType": "VariableDeclaration",
										"scope": 61,
										"src": "1464:9:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 50,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1464:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1463:11:0"
							},
							"scope": 62,
							"src": "1417:106:0",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "35:1488:0"
				},
				"id": 0
			},
			"contracts/ISchemaResolver.sol": {
				"ast": {
					"absolutePath": "contracts/ISchemaResolver.sol",
					"exportedSymbols": {
						"Attestation": [
							45
						],
						"ISchemaResolver": [
							117
						]
					},
					"id": 118,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 63,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:1"
						},
						{
							"absolutePath": "contracts/Common.sol",
							"file": "./Common.sol",
							"id": 65,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 118,
							"sourceUnit": 62,
							"src": "62:43:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 64,
										"name": "Attestation",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 45,
										"src": "71:11:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISchemaResolver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 66,
								"nodeType": "StructuredDocumentation",
								"src": "109:87:1",
								"text": "@title ISchemaResolver\n @notice The interface of an optional schema resolver."
							},
							"fullyImplemented": false,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "ISchemaResolver",
							"nameLocation": "206:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "229:64:1",
										"text": "@notice Returns whether the resolver supports ETH transfers."
									},
									"functionSelector": "ce46e046",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPayable",
									"nameLocation": "308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "317:2:1"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "343:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "343:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:6:1"
									},
									"scope": 117,
									"src": "299:50:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "357:169:1",
										"text": "@notice Processes an attestation and verifies whether it's valid.\n @param attestation The new attestation.\n @return Whether the attestation is valid."
									},
									"functionSelector": "e60c3505",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "attest",
									"nameLocation": "541:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "attestation",
												"nameLocation": "569:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "548:32:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Attestation_$45_calldata_ptr",
													"typeString": "struct Attestation"
												},
												"typeName": {
													"id": 75,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 74,
														"name": "Attestation",
														"nameLocations": [
															"548:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 45,
														"src": "548:11:1"
													},
													"referencedDeclaration": 45,
													"src": "548:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Attestation_$45_storage_ptr",
														"typeString": "struct Attestation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "547:34:1"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "608:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "608:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:6:1"
									},
									"scope": 117,
									"src": "532:82:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "622:271:1",
										"text": "@notice Processes multiple attestations and verifies whether they are valid.\n @param attestations The new attestations.\n @param values Explicit ETH amounts which were sent with each attestation.\n @return Whether all the attestations are valid."
									},
									"functionSelector": "91db0b7e",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multiAttest",
									"nameLocation": "908:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "attestations",
												"nameLocation": "953:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "930:35:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Attestation_$45_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Attestation[]"
												},
												"typeName": {
													"baseType": {
														"id": 84,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 83,
															"name": "Attestation",
															"nameLocations": [
																"930:11:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 45,
															"src": "930:11:1"
														},
														"referencedDeclaration": 45,
														"src": "930:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Attestation_$45_storage_ptr",
															"typeString": "struct Attestation"
														}
													},
													"id": 85,
													"nodeType": "ArrayTypeName",
													"src": "930:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Attestation_$45_storage_$dyn_storage_ptr",
														"typeString": "struct Attestation[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "995:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "976:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 87,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "976:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 88,
													"nodeType": "ArrayTypeName",
													"src": "976:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "919:89:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1035:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 91,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1035:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1034:6:1"
									},
									"scope": 117,
									"src": "899:142:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1049:207:1",
										"text": "@notice Processes an attestation revocation and verifies if it can be revoked.\n @param attestation The existing attestation to be revoked.\n @return Whether the attestation can be revoked."
									},
									"functionSelector": "e49617e1",
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revoke",
									"nameLocation": "1271:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "attestation",
												"nameLocation": "1299:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1278:32:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Attestation_$45_calldata_ptr",
													"typeString": "struct Attestation"
												},
												"typeName": {
													"id": 97,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 96,
														"name": "Attestation",
														"nameLocations": [
															"1278:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 45,
														"src": "1278:11:1"
													},
													"referencedDeclaration": 45,
													"src": "1278:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Attestation_$45_storage_ptr",
														"typeString": "struct Attestation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:34:1"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1338:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 100,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1338:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:6:1"
									},
									"scope": 117,
									"src": "1262:82:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "1352:300:1",
										"text": "@notice Processes revocation of multiple attestation and verifies they can be revoked.\n @param attestations The existing attestations to be revoked.\n @param values Explicit ETH amounts which were sent with each revocation.\n @return Whether the attestations can be revoked."
									},
									"functionSelector": "88e5b2d9",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multiRevoke",
									"nameLocation": "1667:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "attestations",
												"nameLocation": "1712:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1689:35:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Attestation_$45_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Attestation[]"
												},
												"typeName": {
													"baseType": {
														"id": 106,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 105,
															"name": "Attestation",
															"nameLocations": [
																"1689:11:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 45,
															"src": "1689:11:1"
														},
														"referencedDeclaration": 45,
														"src": "1689:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Attestation_$45_storage_ptr",
															"typeString": "struct Attestation"
														}
													},
													"id": 107,
													"nodeType": "ArrayTypeName",
													"src": "1689:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Attestation_$45_storage_$dyn_storage_ptr",
														"typeString": "struct Attestation[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1754:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1735:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 109,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1735:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 110,
													"nodeType": "ArrayTypeName",
													"src": "1735:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1678:89:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1794:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1794:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1793:6:1"
									},
									"scope": 117,
									"src": "1658:142:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 118,
							"src": "196:1607:1",
							"usedErrors": []
						}
					],
					"src": "35:1768:1"
				},
				"id": 1
			}
		}
	}
}